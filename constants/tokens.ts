import type { TokenCategory, TokenCategoryData } from "@/types/game"

export const TOKEN_CATEGORIES: Record<TokenCategory, TokenCategoryData> = {
  blue: {
    name: "Control Structures",
    tokens: [
      "if",
      "else",
      "else if",
      "while",
      "for",
      "do",
      "switch",
      "case",
      "default",
      "(",
      ")",
      "{",
      "}",
      "[",
      "]",
      "try",
      "catch",
      "finally",
    ],
    color: "bg-blue-500 hover:bg-blue-600",
  },
  green: {
    name: "Declarations & Assignments",
    // Split into subgroups for clarity
    tokens: [
      // Declaration keywords
      "let",
      "const",
      "var",
      "function",
      "class",
      "new",
      "this",
      // Assignment operators
      "=",
      "+=",
      "-=",
      "*=",
      "/=",
      "%=",
      "++",
      "--",
      // Variable names (ensure these are always present for green containers)
      "x",
      "y",
      "z",
      "i",
      "j",
      "name",
      "value",
      "data",
      "result",
      "count",
      "index",
    ],
    color: "bg-green-500 hover:bg-green-600",
  },
  orange: {
    name: "Jump & Flow",
    tokens: ["return", "break", "continue", "throw", "yield", "await", "async"],
    color: "bg-orange-500 hover:bg-orange-600",
  },
  purple: {
    name: "Operators & Logic",
    tokens: [
      "+",
      "-",
      "*",
      "/",
      "%",
      "**",
      "==",
      "!=",
      "===",
      "!==",
      "<",
      ">",
      "<=",
      ">=",
      "&&",
      "||",
      "!",
      "&",
      "|",
      "^",
      "<<",
      ">>",
      "~",
    ],
    color: "bg-purple-500 hover:bg-purple-600",
  },
  red: {
    name: "Literals & Values",
    tokens: [
      "0",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "true",
      "false",
      "null",
      "undefined",
      "NaN",
      "Infinity",
      '"hello"',
      '"world"',
      "'text'",
      "`template`",
    ],
    color: "bg-red-500 hover:bg-red-600",
  },
  cyan: {
    name: "Built-ins & Methods",
    tokens: [
      "console.log",
      "print",
      "alert",
      "prompt",
      "parseInt",
      "parseFloat",
      "Math.max",
      "Math.min",
      "Math.random",
      "Array.push",
      "String.length",
      "Object.keys",
      "JSON.parse",
      "JSON.stringify",
    ],
    color: "bg-cyan-500 hover:bg-cyan-600",
  },
  gray: {
    name: "Wild (Universal)",
    tokens: [";", ",", ".", ":", "?", '"', "'", "`"],
    color: "bg-gray-500 hover:bg-gray-600",
  },
  empty: {
    name: "Empty Token",
    tokens: ["[empty]"], // Special empty token
    color: "bg-gray-500 hover:bg-gray-600", // Same as wildcards
  },
}
